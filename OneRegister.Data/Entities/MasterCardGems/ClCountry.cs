// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace OneRegister.Data.Entities.MasterCardGems
{
    /// <summary>
    /// Codelist of Countries
    /// </summary>
    [Table("CL_Country", Schema = "Entity")]
    [Index(nameof(CountryCode), Name = "IX_CL_Country_CountryCode", IsUnique = true)]
    [Index(nameof(CountryName), Name = "IX_CL_Country_CountryName", IsUnique = true)]
    [Index(nameof(IsoAlpha3), Name = "IX_CL_Country_IsoAlpha3", IsUnique = true)]
    [Index(nameof(IsoNumeric), Name = "IX_CL_Country_IsoNumeric", IsUnique = true)]
    public partial class ClCountry
    {
        public ClCountry()
        {
            ClBank = new HashSet<ClBank>();
            ClCountryState = new HashSet<ClCountryState>();
        }

        [Key]
        public int PkId { get; set; }
        /// <summary>
        /// ISO-3166 alpha-2 code (eg: MY, BD), as per https://en.wikipedia.org/wiki/ISO_3166-1
        /// </summary>
        [Required]
        [StringLength(2)]
        public string CountryCode { get; set; }
        /// <summary>
        /// Name of Country
        /// </summary>
        [Required]
        [StringLength(100)]
        public string CountryName { get; set; }
        /// <summary>
        /// Country numeric code as per ISO-3166, eg: 458, 840, 050
        /// </summary>
        [Required]
        [StringLength(3)]
        public string IsoNumeric { get; set; }
        [StringLength(3)]
        public string IsoAlpha3 { get; set; }
        [StringLength(100)]
        public string CountryName2 { get; set; }
        /// <summary>
        /// Currency Code as per ISO 4217, eg: MYR, USD, BDT
        /// </summary>
        [StringLength(3)]
        public string CurrencyCode { get; set; }
        [StringLength(2)]
        public string FipsCode { get; set; }
        [Column("north")]
        [StringLength(30)]
        public string North { get; set; }
        [Column("south")]
        [StringLength(30)]
        public string South { get; set; }
        [Column("east")]
        [StringLength(30)]
        public string East { get; set; }
        [Column("west")]
        [StringLength(30)]
        public string West { get; set; }
        [StringLength(30)]
        public string Capital { get; set; }
        [StringLength(100)]
        public string ContinentName { get; set; }
        [StringLength(2)]
        public string Continent { get; set; }
        [StringLength(100)]
        public string Languages { get; set; }
        [Column(TypeName = "decimal(10, 0)")]
        public decimal? GeoNameId { get; set; }
        /// <summary>
        /// Phone Prefix of the Country
        /// </summary>
        [StringLength(3)]
        public string PhonePrefix { get; set; }

        public virtual ICollection<ClBank> ClBank { get; set; }
        public virtual ICollection<ClCountryState> ClCountryState { get; set; }
    }
}